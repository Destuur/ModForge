<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Armors" xml:space="preserve">
    <value>Armaduras</value>
  </data>
  <data name="AvailableMods" xml:space="preserve">
    <value>Mods disponibles</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Atrás</value>
  </data>
  <data name="BrowseModItems" xml:space="preserve">
    <value>Explorar objetos del mod</value>
  </data>
  <data name="Buffs" xml:space="preserve">
    <value>Mejoras</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>Clase</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Limpiar</value>
  </data>
  <data name="ClearInfo" xml:space="preserve">
    <value>Limpia el archivo actualmente seleccionado</value>
  </data>
  <data name="Consumables" xml:space="preserve">
    <value>Consumibles</value>
  </data>
  <data name="CopyCommand" xml:space="preserve">
    <value>Copiar comando</value>
  </data>
  <data name="CopyId" xml:space="preserve">
    <value>Copiar ID</value>
  </data>
  <data name="CraftingItems" xml:space="preserve">
    <value>Objetos para fabricar</value>
  </data>
  <data name="CreatedMods" xml:space="preserve">
    <value>Mods creados</value>
  </data>
  <data name="CreateMod" xml:space="preserve">
    <value>Crear mod</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Tablero</value>
  </data>
  <data name="DeleteMod" xml:space="preserve">
    <value>Eliminar mod</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Duplicar</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar mod</value>
  </data>
  <data name="EntryDialogButtonText" xml:space="preserve">
    <value>¡Tráeme los datos sagrados!</value>
  </data>
  <data name="EntryDialogHeader" xml:space="preserve">
    <value>Un campesino sin horca entró</value>
  </data>
  <data name="EntryDialogLine1" xml:space="preserve">
    <value>Has lanzado ModForge por primera vez, lo que probablemente significa que estás listo para empezar a moldear el mundo — o al menos a romperlo con estilo.</value>
  </data>
  <data name="EntryDialogLine2" xml:space="preserve">
    <value>Un sentimiento noble, sin duda.</value>
  </data>
  <data name="EntryDialogLine3" xml:space="preserve">
    <value>Pero espera, noble artesano! Antes de comenzar, hay un pequeño problema: nos faltan los datos sagrados del juego.</value>
  </data>
  <data name="EntryDialogLine4" xml:space="preserve">
    <value>Ve a Configuración, realiza el ritual e importa los archivos. Solo entonces se encenderá la fragua.</value>
  </data>
  <data name="EntryDialogLine5" xml:space="preserve">
    <value>Sin datos, no hay gloria. Sin gloria, no hay mods.</value>
  </data>
  <data name="EntryDialogLine6" xml:space="preserve">
    <value>Ahora emprende tu camino y demuestra que no eres solo otro borracho en la taberna que se jacta de “grandes planes.”</value>
  </data>
  <data name="EntryDialogTitle" xml:space="preserve">
    <value>Tengo bastante hambre — de mods.</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Exportar</value>
  </data>
  <data name="ExternalMods" xml:space="preserve">
    <value>Mods externos</value>
  </data>
  <data name="FilePickerInfo" xml:space="preserve">
    <value>Abre el explorador de archivos para seleccionar un mod en tu disco</value>
  </data>
  <data name="FileUploadInfo1" xml:space="preserve">
    <value>Arrastra y suelta archivos aquí o haz clic</value>
  </data>
  <data name="FileUploadInfo2" xml:space="preserve">
    <value>Formatos compatibles: .zip, .rar, .7z, .gzip, .tar</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Ayuda</value>
  </data>
  <data name="Implementation" xml:space="preserve">
    <value>Implementación</value>
  </data>
  <data name="InstallMod" xml:space="preserve">
    <value>Instalar mod</value>
  </data>
  <data name="InstallModInfo" xml:space="preserve">
    <value>Instala el mod actualmente seleccionado</value>
  </data>
  <data name="InventoryPresets" xml:space="preserve">
    <value>Preajustes de inventario</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Objetos</value>
  </data>
  <data name="LanguageKey" xml:space="preserve">
    <value>Español</value>
  </data>
  <data name="LoadoutEmptyInfo" xml:space="preserve">
    <value>Vacía la configuración de este archivo guardado</value>
  </data>
  <data name="Loadouts" xml:space="preserve">
    <value>Loadouts de mods</value>
  </data>
  <data name="Miscellaneous" xml:space="preserve">
    <value>Varios</value>
  </data>
  <data name="MiscItems" xml:space="preserve">
    <value>Objetos varios</value>
  </data>
  <data name="ModdedIngots" xml:space="preserve">
    <value>Lingotes modificados</value>
  </data>
  <data name="ModEffects" xml:space="preserve">
    <value>Efectos del mod</value>
  </data>
  <data name="NewModButton" xml:space="preserve">
    <value>Nuevo mod</value>
  </data>
  <data name="NewModInputInvalid" xml:space="preserve">
    <value>¡Rellena el formulario, campesino!</value>
  </data>
  <data name="NewModInputValid" xml:space="preserve">
    <value>Que comience el modding</value>
  </data>
  <data name="OpenFilePicker" xml:space="preserve">
    <value>Abrir selector de archivos</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>Abrir carpeta</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Resumen</value>
  </data>
  <data name="Perks" xml:space="preserve">
    <value>Perks</value>
  </data>
  <data name="ResetAll" xml:space="preserve">
    <value>Restablecer todo</value>
  </data>
  <data name="RPGParameter" xml:space="preserve">
    <value>Parámetros RPG</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="SaveFileLoadout" xml:space="preserve">
    <value>Guardar configuración de archivo</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Buscar</value>
  </data>
  <data name="SelectForMore" xml:space="preserve">
    <value>Selecciona un elemento para más detalles</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Configuración</value>
  </data>
  <data name="Skill" xml:space="preserve">
    <value>Habilidad</value>
  </data>
  <data name="StartModding" xml:space="preserve">
    <value>Comenzar a modear</value>
  </data>
  <data name="STORM" xml:space="preserve">
    <value>STORM</value>
  </data>
  <data name="UseLoadout" xml:space="preserve">
    <value>Usar configuración</value>
  </data>
  <data name="Weapons" xml:space="preserve">
    <value>Armas</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Autor</value>
  </data>
  <data name="ModVersion" xml:space="preserve">
    <value>Versión del mod</value>
  </data>
  <data name="CreatedOn" xml:space="preserve">
    <value>Creado el</value>
  </data>
  <data name="ModId" xml:space="preserve">
    <value>ID del mod</value>
  </data>
  <data name="ModifiesLevel" xml:space="preserve">
    <value>Modifica el nivel</value>
  </data>
  <data name="ModVersionSupport" xml:space="preserve">
    <value>Agregar compatibilidad de versión</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Versión</value>
  </data>
  <data name="UserNameInfo" xml:space="preserve">
    <value>Henry ya estaba cogido. Elige otro.</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Nombre de usuario</value>
  </data>
  <data name="PathInfo" xml:space="preserve">
    <value>Este es el camino. El único verdadero.</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Idioma</value>
  </data>
  <data name="BuffParameter" xml:space="preserve">
    <value>Parámetro de mejora</value>
  </data>
  <data name="Abbreviation" xml:space="preserve">
    <value>Abreviatura</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="Definition" xml:space="preserve">
    <value>Definición</value>
  </data>
  <data name="ThanksForNothing" xml:space="preserve">
    <value>Gracias por nada...</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="ModName" xml:space="preserve">
    <value>Nombre del mod</value>
  </data>
  <data name="ModDescription" xml:space="preserve">
    <value>Descripción del mod</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Restablecer</value>
  </data>
  <data name="ModAuthor" xml:space="preserve">
    <value>Autor del mod</value>
  </data>
</root>