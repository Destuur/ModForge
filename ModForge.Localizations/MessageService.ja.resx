<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Armors" xml:space="preserve">
    <value>防具</value>
  </data>
  <data name="AvailableMods" xml:space="preserve">
    <value>利用可能なMOD</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="BrowseModItems" xml:space="preserve">
    <value>Modアイテムを閲覧</value>
  </data>
  <data name="Buffs" xml:space="preserve">
    <value>バフ</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>クラス</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="ClearInfo" xml:space="preserve">
    <value>現在選択されているファイルをクリア</value>
  </data>
  <data name="Consumables" xml:space="preserve">
    <value>消耗品</value>
  </data>
  <data name="CopyCommand" xml:space="preserve">
    <value>コマンドをコピー</value>
  </data>
  <data name="CopyId" xml:space="preserve">
    <value>IDをコピー</value>
  </data>
  <data name="CraftingItems" xml:space="preserve">
    <value>クラフト素材</value>
  </data>
  <data name="CreatedMods" xml:space="preserve">
    <value>作成済みMod</value>
  </data>
  <data name="CreateMod" xml:space="preserve">
    <value>MODを作成</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>ダッシュボード</value>
  </data>
  <data name="DeleteMod" xml:space="preserve">
    <value>Modを削除</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>複製</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>を編集</value>
  </data>
  <data name="EntryDialogButtonText" xml:space="preserve">
    <value>聖なるデータを持ってきてくれ！</value>
  </data>
  <data name="EntryDialogHeader" xml:space="preserve">
    <value>鍬を持たぬ農民が現れた</value>
  </data>
  <data name="EntryDialogLine1" xml:space="preserve">
    <value>ModForgeを初めて起動しましたね。つまり、あなたは世界を形作る…あるいはスタイリッシュに壊す覚悟ができているということです。</value>
  </data>
  <data name="EntryDialogLine2" xml:space="preserve">
    <value>まことに気高い心がけです。</value>
  </data>
  <data name="EntryDialogLine3" xml:space="preserve">
    <value>ですが待ってください、尊き細工師よ！始める前に一つだけ問題があります。聖なるゲームデータが欠けているのです。</value>
  </data>
  <data name="EntryDialogLine4" xml:space="preserve">
    <value>設定画面に行き、儀式を行い、ファイルをインポートしてください。そうすれば、鍛冶場に火が灯るでしょう。</value>
  </data>
  <data name="EntryDialogLine5" xml:space="preserve">
    <value>データなければ、栄光なし。栄光なければ、Modもなし。</value>
  </data>
  <data name="EntryDialogLine6" xml:space="preserve">
    <value>さあ旅立ちましょう。ただの酒場の酔っ払いとは違うと証明するのです。「壮大な計画」とやらを語るだけの者とは違うと。</value>
  </data>
  <data name="EntryDialogTitle" xml:space="preserve">
    <value>私は今、とても空腹だ…Modのためにな！</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>エクスポート</value>
  </data>
  <data name="ExternalMods" xml:space="preserve">
    <value>外部Mod</value>
  </data>
  <data name="FilePickerInfo" xml:space="preserve">
    <value>ファイルエクスプローラーを開いて、ローカルのMODを選択</value>
  </data>
  <data name="FileUploadInfo1" xml:space="preserve">
    <value>ここにファイルをドラッグ＆ドロップ、またはクリック</value>
  </data>
  <data name="FileUploadInfo2" xml:space="preserve">
    <value>対応ファイル形式: .zip, .rar, .7z, .gzip, .tar</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>ヘルプ</value>
  </data>
  <data name="Implementation" xml:space="preserve">
    <value>実装</value>
  </data>
  <data name="InstallMod" xml:space="preserve">
    <value>Modをインストール</value>
  </data>
  <data name="InstallModInfo" xml:space="preserve">
    <value>現在選択されているMODをインストール</value>
  </data>
  <data name="InventoryPresets" xml:space="preserve">
    <value>インベントリプリセット</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>アイテム</value>
  </data>
  <data name="LanguageKey" xml:space="preserve">
    <value>日本語</value>
  </data>
  <data name="LoadoutEmptyInfo" xml:space="preserve">
    <value>このセーブファイルの現在のロードアウトを空にする</value>
  </data>
  <data name="Loadouts" xml:space="preserve">
    <value>Modロードアウト</value>
  </data>
  <data name="Miscellaneous" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="MiscItems" xml:space="preserve">
    <value>その他のアイテム</value>
  </data>
  <data name="ModdedIngots" xml:space="preserve">
    <value>改造されたインゴット</value>
  </data>
  <data name="ModEffects" xml:space="preserve">
    <value>MODの効果</value>
  </data>
  <data name="NewModButton" xml:space="preserve">
    <value>新規Mod</value>
  </data>
  <data name="NewModInputInvalid" xml:space="preserve">
    <value>フォームに記入せよ、農民よ！</value>
  </data>
  <data name="NewModInputValid" xml:space="preserve">
    <value>さあ、MOD作成の始まりだ</value>
  </data>
  <data name="OpenFilePicker" xml:space="preserve">
    <value>ファイルピッカーを開く</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>フォルダーを開く</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>概要</value>
  </data>
  <data name="Perks" xml:space="preserve">
    <value>パーク</value>
  </data>
  <data name="ResetAll" xml:space="preserve">
    <value>すべてリセット</value>
  </data>
  <data name="RPGParameter" xml:space="preserve">
    <value>RPGパラメーター</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="SaveFileLoadout" xml:space="preserve">
    <value>ファイルのロードアウトを保存</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="SelectForMore" xml:space="preserve">
    <value>詳細を見るには要素を選択</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="Skill" xml:space="preserve">
    <value>スキル</value>
  </data>
  <data name="StartModding" xml:space="preserve">
    <value>MOD作成を始める</value>
  </data>
  <data name="STORM" xml:space="preserve">
    <value>STORM</value>
  </data>
  <data name="UseLoadout" xml:space="preserve">
    <value>ロードアウトを使う</value>
  </data>
  <data name="Weapons" xml:space="preserve">
    <value>武器</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>作者</value>
  </data>
  <data name="ModVersion" xml:space="preserve">
    <value>MODバージョン</value>
  </data>
  <data name="CreatedOn" xml:space="preserve">
    <value>作成日</value>
  </data>
  <data name="ModId" xml:space="preserve">
    <value>MOD ID</value>
  </data>
  <data name="ModifiesLevel" xml:space="preserve">
    <value>レベルを変更</value>
  </data>
  <data name="ModVersionSupport" xml:space="preserve">
    <value>バージョン対応を追加</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="UserNameInfo" xml:space="preserve">
    <value>ヘンリーは既に使われている。自分の名前を選べ。</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>ユーザー名</value>
  </data>
  <data name="PathInfo" xml:space="preserve">
    <value>これが道だ。唯一無二の道だ。</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="BuffParameter" xml:space="preserve">
    <value>バフパラメータ</value>
  </data>
  <data name="Abbreviation" xml:space="preserve">
    <value>略語</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="Definition" xml:space="preserve">
    <value>定義</value>
  </data>
  <data name="ThanksForNothing" xml:space="preserve">
    <value>なんてこった…ありがとう、いやほんとに。</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="ModName" xml:space="preserve">
    <value>MOD名</value>
  </data>
  <data name="ModDescription" xml:space="preserve">
    <value>MODの説明</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>リセット</value>
  </data>
  <data name="ModAuthor" xml:space="preserve">
    <value>モッド作者</value>
  </data>
</root>