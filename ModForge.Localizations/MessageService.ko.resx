<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Armors" xml:space="preserve">
    <value>방어구</value>
  </data>
  <data name="AvailableMods" xml:space="preserve">
    <value>사용 가능한 모드</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>뒤로</value>
  </data>
  <data name="BrowseModItems" xml:space="preserve">
    <value>모드 아이템 탐색</value>
  </data>
  <data name="Buffs" xml:space="preserve">
    <value>버프</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>클래스</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>지우기</value>
  </data>
  <data name="ClearInfo" xml:space="preserve">
    <value>현재 선택된 파일을 지웁니다</value>
  </data>
  <data name="Consumables" xml:space="preserve">
    <value>소모품</value>
  </data>
  <data name="CopyCommand" xml:space="preserve">
    <value>명령어 복사</value>
  </data>
  <data name="CopyId" xml:space="preserve">
    <value>ID 복사</value>
  </data>
  <data name="CraftingItems" xml:space="preserve">
    <value>제작 아이템</value>
  </data>
  <data name="CreatedMods" xml:space="preserve">
    <value>제작된 모드</value>
  </data>
  <data name="CreateMod" xml:space="preserve">
    <value>모드 생성</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>대시보드</value>
  </data>
  <data name="DeleteMod" xml:space="preserve">
    <value>모드 삭제</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>복제</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>모드 편집</value>
  </data>
  <data name="EntryDialogButtonText" xml:space="preserve">
    <value>성스러운 데이터를 가져오시오</value>
  </data>
  <data name="EntryDialogHeader" xml:space="preserve">
    <value>쇠스랑 없는 농부가 입장했다</value>
  </data>
  <data name="EntryDialogLine1" xml:space="preserve">
    <value>당신은 ModForge를 처음 실행했습니다. 이제 세상을 빚거나, 적어도 멋지게 망칠 준비가 되었다는 뜻이겠죠.</value>
  </data>
  <data name="EntryDialogLine2" xml:space="preserve">
    <value>참으로 고결한 의지이옵니다.</value>
  </data>
  <data name="EntryDialogLine3" xml:space="preserve">
    <value>하지만 잠깐만요, 고귀한 장인님! 시작하기 전에 작은 문제가 있습니다. 성스러운 게임 데이터가 없군요.</value>
  </data>
  <data name="EntryDialogLine4" xml:space="preserve">
    <value>설정으로 가서 의식을 수행하고, 파일을 가져오십시오. 그래야만 대장간에 불이 붙을 것입니다.</value>
  </data>
  <data name="EntryDialogLine5" xml:space="preserve">
    <value>데이터 없이는 영광도 없고, 영광 없이는 모드도 없소.</value>
  </data>
  <data name="EntryDialogLine6" xml:space="preserve">
    <value>이제 당신의 길을 나아가시오. 선술집에서 ‘거대한 계획’을 떠벌리는 취객이 아니라는 걸 증명해 보이시오.</value>
  </data>
  <data name="EntryDialogTitle" xml:space="preserve">
    <value>나 지금 꽤 배고프군... 모드가 먹고 싶소.</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>내보내기</value>
  </data>
  <data name="ExternalMods" xml:space="preserve">
    <value>외부 모드</value>
  </data>
  <data name="FilePickerInfo" xml:space="preserve">
    <value>파일 탐색기를 열어 하드 드라이브에서 모드를 선택합니다</value>
  </data>
  <data name="FileUploadInfo1" xml:space="preserve">
    <value>여기에 파일을 드래그하거나 클릭</value>
  </data>
  <data name="FileUploadInfo2" xml:space="preserve">
    <value>지원되는 파일 형식: .zip, .rar, .7z, .gzip, .tar</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>도움말</value>
  </data>
  <data name="Implementation" xml:space="preserve">
    <value>구현</value>
  </data>
  <data name="InstallMod" xml:space="preserve">
    <value>모드 설치</value>
  </data>
  <data name="InstallModInfo" xml:space="preserve">
    <value>현재 선택된 모드를 설치</value>
  </data>
  <data name="InventoryPresets" xml:space="preserve">
    <value>인벤토리 프리셋</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>아이템</value>
  </data>
  <data name="LanguageKey" xml:space="preserve">
    <value>한국어</value>
  </data>
  <data name="LoadoutEmptyInfo" xml:space="preserve">
    <value>이 저장 파일의 현재 로드아웃을 비웁니다</value>
  </data>
  <data name="Loadouts" xml:space="preserve">
    <value>모드 로드아웃</value>
  </data>
  <data name="Miscellaneous" xml:space="preserve">
    <value>기타</value>
  </data>
  <data name="MiscItems" xml:space="preserve">
    <value>기타 아이템</value>
  </data>
  <data name="ModdedIngots" xml:space="preserve">
    <value>모딩된 주괴</value>
  </data>
  <data name="ModEffects" xml:space="preserve">
    <value>모드 효과</value>
  </data>
  <data name="NewModButton" xml:space="preserve">
    <value>새 모드</value>
  </data>
  <data name="NewModInputInvalid" xml:space="preserve">
    <value>양식을 작성하시오, 농노여!</value>
  </data>
  <data name="NewModInputValid" xml:space="preserve">
    <value>모딩을 시작하자</value>
  </data>
  <data name="OpenFilePicker" xml:space="preserve">
    <value>파일 선택기 열기</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>폴더 열기</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>개요</value>
  </data>
  <data name="Perks" xml:space="preserve">
    <value>특성</value>
  </data>
  <data name="ResetAll" xml:space="preserve">
    <value>모두 초기화</value>
  </data>
  <data name="RPGParameter" xml:space="preserve">
    <value>RPG 매개변수</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>저장</value>
  </data>
  <data name="SaveFileLoadout" xml:space="preserve">
    <value>파일 로드아웃 저장</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>검색</value>
  </data>
  <data name="SelectForMore" xml:space="preserve">
    <value>자세한 내용을 보려면 요소를 선택하세요</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>설정</value>
  </data>
  <data name="Skill" xml:space="preserve">
    <value>기술</value>
  </data>
  <data name="StartModding" xml:space="preserve">
    <value>모딩 시작</value>
  </data>
  <data name="STORM" xml:space="preserve">
    <value>STORM</value>
  </data>
  <data name="UseLoadout" xml:space="preserve">
    <value>로드아웃 사용</value>
  </data>
  <data name="Weapons" xml:space="preserve">
    <value>무기</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>작성자</value>
  </data>
  <data name="ModVersion" xml:space="preserve">
    <value>모드 버전</value>
  </data>
  <data name="CreatedOn" xml:space="preserve">
    <value>생성일</value>
  </data>
  <data name="ModId" xml:space="preserve">
    <value>모드 ID</value>
  </data>
  <data name="ModifiesLevel" xml:space="preserve">
    <value>레벨 수정</value>
  </data>
  <data name="ModVersionSupport" xml:space="preserve">
    <value>버전 지원 추가</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>버전</value>
  </data>
  <data name="UserNameInfo" xml:space="preserve">
    <value>헨리는 이미 사용 중입니다. 직접 고르세요.</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>사용자 이름</value>
  </data>
  <data name="PathInfo" xml:space="preserve">
    <value>이 길이다. 진정한 길이다.</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>언어</value>
  </data>
  <data name="BuffParameter" xml:space="preserve">
    <value>버프 매개변수</value>
  </data>
  <data name="Abbreviation" xml:space="preserve">
    <value>약어</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="Definition" xml:space="preserve">
    <value>정의</value>
  </data>
  <data name="ThanksForNothing" xml:space="preserve">
    <value>정말 고맙다...</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>취소</value>
  </data>
  <data name="ModName" xml:space="preserve">
    <value>모드 이름</value>
  </data>
  <data name="ModDescription" xml:space="preserve">
    <value>모드 설명</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>초기화</value>
  </data>
  <data name="ModAuthor" xml:space="preserve">
    <value>모드 제작자</value>
  </data>
</root>