<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Armors" xml:space="preserve">
    <value>护甲</value>
  </data>
  <data name="AvailableMods" xml:space="preserve">
    <value>可用模组</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>返回</value>
  </data>
  <data name="BrowseModItems" xml:space="preserve">
    <value>浏览模组物品</value>
  </data>
  <data name="Buffs" xml:space="preserve">
    <value>增益效果</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>类别</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>清除</value>
  </data>
  <data name="ClearInfo" xml:space="preserve">
    <value>清除当前选中的文件</value>
  </data>
  <data name="Consumables" xml:space="preserve">
    <value>消耗品</value>
  </data>
  <data name="CopyCommand" xml:space="preserve">
    <value>复制命令</value>
  </data>
  <data name="CopyId" xml:space="preserve">
    <value>复制ID</value>
  </data>
  <data name="CraftingItems" xml:space="preserve">
    <value>制作材料</value>
  </data>
  <data name="CreatedMods" xml:space="preserve">
    <value>已创建模组</value>
  </data>
  <data name="CreateMod" xml:space="preserve">
    <value>创建模组</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>仪表盘</value>
  </data>
  <data name="DeleteMod" xml:space="preserve">
    <value>删除模组</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>编辑模组</value>
  </data>
  <data name="EntryDialogButtonText" xml:space="preserve">
    <value>带来神圣的数据</value>
  </data>
  <data name="EntryDialogHeader" xml:space="preserve">
    <value>一个没有叉子的农夫进入了</value>
  </data>
  <data name="EntryDialogLine1" xml:space="preserve">
    <value>你第一次启动ModForge，这可能意味着你准备好开始塑造世界——或者至少以风格破坏它。</value>
  </data>
  <data name="EntryDialogLine2" xml:space="preserve">
    <value>确实是崇高的情感。</value>
  </data>
  <data name="EntryDialogLine3" xml:space="preserve">
    <value>但且慢，高贵的工匠！在我们开始之前，有一个小问题：我们缺少神圣的游戏数据。</value>
  </data>
  <data name="EntryDialogLine4" xml:space="preserve">
    <value>前往设置，执行仪式，导入文件。只有这样，熔炉才会点燃。</value>
  </data>
  <data name="EntryDialogLine5" xml:space="preserve">
    <value>没有数据，没有荣耀。没有荣耀，没有模组。</value>
  </data>
  <data name="EntryDialogLine6" xml:space="preserve">
    <value>现在踏上你的道路，证明你不仅仅是酒馆里吹嘘“大计划”的另一个醉汉。</value>
  </data>
  <data name="EntryDialogTitle" xml:space="preserve">
    <value>我感觉非常饿——想要模组。</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>导出</value>
  </data>
  <data name="ExternalMods" xml:space="preserve">
    <value>外部模组</value>
  </data>
  <data name="FilePickerInfo" xml:space="preserve">
    <value>打开文件浏览器，选择硬盘上的模组</value>
  </data>
  <data name="FileUploadInfo1" xml:space="preserve">
    <value>拖放文件到此处或点击</value>
  </data>
  <data name="FileUploadInfo2" xml:space="preserve">
    <value>支持的文件格式：.zip, .rar, .7z, .gzip, .tar</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="Implementation" xml:space="preserve">
    <value>执行</value>
  </data>
  <data name="InstallMod" xml:space="preserve">
    <value>安装模组</value>
  </data>
  <data name="InstallModInfo" xml:space="preserve">
    <value>安装当前选中的模组</value>
  </data>
  <data name="InventoryPresets" xml:space="preserve">
    <value>库存预设</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>物品</value>
  </data>
  <data name="LanguageKey" xml:space="preserve">
    <value>中文（简体)</value>
  </data>
  <data name="LoadoutEmptyInfo" xml:space="preserve">
    <value>清空此存档当前的配置</value>
  </data>
  <data name="Loadouts" xml:space="preserve">
    <value>模组配置</value>
  </data>
  <data name="Miscellaneous" xml:space="preserve">
    <value>杂项</value>
  </data>
  <data name="MiscItems" xml:space="preserve">
    <value>杂项物品</value>
  </data>
  <data name="ModdedIngots" xml:space="preserve">
    <value>已修改的锭子</value>
  </data>
  <data name="ModEffects" xml:space="preserve">
    <value>模组效果</value>
  </data>
  <data name="NewModButton" xml:space="preserve">
    <value>新模组</value>
  </data>
  <data name="NewModInputInvalid" xml:space="preserve">
    <value>填写表格，农夫！</value>
  </data>
  <data name="NewModInputValid" xml:space="preserve">
    <value>开始制作模组</value>
  </data>
  <data name="OpenFilePicker" xml:space="preserve">
    <value>打开文件选择器</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>打开文件夹</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>概览</value>
  </data>
  <data name="Perks" xml:space="preserve">
    <value>特技</value>
  </data>
  <data name="ResetAll" xml:space="preserve">
    <value>全部重置</value>
  </data>
  <data name="RPGParameter" xml:space="preserve">
    <value>RPG参数</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="SaveFileLoadout" xml:space="preserve">
    <value>保存文件配置</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="SelectForMore" xml:space="preserve">
    <value>选择元素查看更多详情</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Skill" xml:space="preserve">
    <value>技能</value>
  </data>
  <data name="StartModding" xml:space="preserve">
    <value>开始制作模组</value>
  </data>
  <data name="STORM" xml:space="preserve">
    <value>STORM</value>
  </data>
  <data name="UseLoadout" xml:space="preserve">
    <value>使用配置</value>
  </data>
  <data name="Weapons" xml:space="preserve">
    <value>武器</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>作者</value>
  </data>
  <data name="ModVersion" xml:space="preserve">
    <value>模组版本</value>
  </data>
  <data name="CreatedOn" xml:space="preserve">
    <value>创建时间</value>
  </data>
  <data name="ModId" xml:space="preserve">
    <value>模组ID</value>
  </data>
  <data name="ModifiesLevel" xml:space="preserve">
    <value>修改等级</value>
  </data>
  <data name="ModVersionSupport" xml:space="preserve">
    <value>添加版本支持</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="UserNameInfo" xml:space="preserve">
    <value>亨利已被占用。请选择自己的名字。</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>用户名</value>
  </data>
  <data name="PathInfo" xml:space="preserve">
    <value>这就是路。唯一真正的路。</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="BuffParameter" xml:space="preserve">
    <value>增益参数</value>
  </data>
  <data name="Abbreviation" xml:space="preserve">
    <value>缩写</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="Definition" xml:space="preserve">
    <value>定义</value>
  </data>
  <data name="ThanksForNothing" xml:space="preserve">
    <value>谢谢你什么都没做……</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="ModName" xml:space="preserve">
    <value>模组名称</value>
  </data>
  <data name="ModDescription" xml:space="preserve">
    <value>模组描述</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>重置</value>
  </data>
  <data name="ModAuthor" xml:space="preserve">
    <value>模组作者</value>
  </data>
</root>