<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Armors" xml:space="preserve">
    <value>Armures</value>
  </data>
  <data name="AvailableMods" xml:space="preserve">
    <value>Mods disponibles</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Retour</value>
  </data>
  <data name="BrowseModItems" xml:space="preserve">
    <value>Parcourir les objets du mod</value>
  </data>
  <data name="Buffs" xml:space="preserve">
    <value>Améliorations</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>Classe</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Effacer</value>
  </data>
  <data name="ClearInfo" xml:space="preserve">
    <value>Efface le fichier actuellement sélectionné</value>
  </data>
  <data name="Consumables" xml:space="preserve">
    <value>Consommables</value>
  </data>
  <data name="CopyCommand" xml:space="preserve">
    <value>Copier la commande</value>
  </data>
  <data name="CopyId" xml:space="preserve">
    <value>Copier l'identifiant</value>
  </data>
  <data name="CraftingItems" xml:space="preserve">
    <value>Objets d’artisanat</value>
  </data>
  <data name="CreatedMods" xml:space="preserve">
    <value>Mods créés</value>
  </data>
  <data name="CreateMod" xml:space="preserve">
    <value>Créer un mod</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Tableau de bord</value>
  </data>
  <data name="DeleteMod" xml:space="preserve">
    <value>Supprimer le mod</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Dupliquer</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Modifier le mod</value>
  </data>
  <data name="EntryDialogButtonText" xml:space="preserve">
    <value>Apporte-moi les données sacrées !</value>
  </data>
  <data name="EntryDialogHeader" xml:space="preserve">
    <value>Un paysan sans fourche est entré</value>
  </data>
  <data name="EntryDialogLine1" xml:space="preserve">
    <value>Tu viens de lancer ModForge pour la première fois, ce qui signifie probablement que tu es prêt à façonner le monde — ou au moins à le chambouler avec panache.</value>
  </data>
  <data name="EntryDialogLine2" xml:space="preserve">
    <value>Un noble sentiment, en vérité.</value>
  </data>
  <data name="EntryDialogLine3" xml:space="preserve">
    <value>Mais attends, noble bricoleur ! Avant de commencer, il y a un petit souci : il nous manque les données sacrées du jeu.</value>
  </data>
  <data name="EntryDialogLine4" xml:space="preserve">
    <value>Va dans les Paramètres, accomplis le rituel et importe les fichiers. Ce n’est qu’alors que la forge s’embrasera.</value>
  </data>
  <data name="EntryDialogLine5" xml:space="preserve">
    <value>Pas de données, pas de gloire. Pas de gloire, pas de mods.</value>
  </data>
  <data name="EntryDialogLine6" xml:space="preserve">
    <value>Partez maintenant, aventurier, et prouve que tu n’es pas qu’un ivrogne de plus à la taverne vantant ses “grands projets.”</value>
  </data>
  <data name="EntryDialogTitle" xml:space="preserve">
    <value>J’ai une faim terrible – de mods.</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Exporter</value>
  </data>
  <data name="ExternalMods" xml:space="preserve">
    <value>Mods externes</value>
  </data>
  <data name="FilePickerInfo" xml:space="preserve">
    <value>Ouvre l’explorateur de fichiers pour sélectionner un mod sur ton disque</value>
  </data>
  <data name="FileUploadInfo1" xml:space="preserve">
    <value>Glisse et dépose les fichiers ici ou clique</value>
  </data>
  <data name="FileUploadInfo2" xml:space="preserve">
    <value>Formats pris en charge : .zip, .rar, .7z, .gzip, .tar</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Aide</value>
  </data>
  <data name="Implementation" xml:space="preserve">
    <value>Implémentation</value>
  </data>
  <data name="InstallMod" xml:space="preserve">
    <value>Installer le mod</value>
  </data>
  <data name="InstallModInfo" xml:space="preserve">
    <value>Installe le mod actuellement sélectionné</value>
  </data>
  <data name="InventoryPresets" xml:space="preserve">
    <value>Préréglages d’inventaire</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Objets</value>
  </data>
  <data name="LanguageKey" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="LoadoutEmptyInfo" xml:space="preserve">
    <value>Vide la configuration actuelle de ce fichier de sauvegarde</value>
  </data>
  <data name="Loadouts" xml:space="preserve">
    <value>Profils de mods</value>
  </data>
  <data name="Miscellaneous" xml:space="preserve">
    <value>Divers</value>
  </data>
  <data name="MiscItems" xml:space="preserve">
    <value>Objets divers</value>
  </data>
  <data name="ModdedIngots" xml:space="preserve">
    <value>Lingots moddés</value>
  </data>
  <data name="ModEffects" xml:space="preserve">
    <value>Effets du mod</value>
  </data>
  <data name="NewModButton" xml:space="preserve">
    <value>Nouveau mod</value>
  </data>
  <data name="NewModInputInvalid" xml:space="preserve">
    <value>Remplis le formulaire, manant !</value>
  </data>
  <data name="NewModInputValid" xml:space="preserve">
    <value>Que le modding commence</value>
  </data>
  <data name="OpenFilePicker" xml:space="preserve">
    <value>Ouvrir le sélecteur de fichiers</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>Ouvrir le dossier</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Aperçu</value>
  </data>
  <data name="Perks" xml:space="preserve">
    <value>Compétences</value>
  </data>
  <data name="ResetAll" xml:space="preserve">
    <value>Tout réinitialiser</value>
  </data>
  <data name="RPGParameter" xml:space="preserve">
    <value>Paramètres RPG</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Sauvegarder</value>
  </data>
  <data name="SaveFileLoadout" xml:space="preserve">
    <value>Sauvegarder la configuration du fichier</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Rechercher</value>
  </data>
  <data name="SelectForMore" xml:space="preserve">
    <value>Sélectionne un élément pour plus de détails</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="Skill" xml:space="preserve">
    <value>Compétence</value>
  </data>
  <data name="StartModding" xml:space="preserve">
    <value>Commencer le modding</value>
  </data>
  <data name="STORM" xml:space="preserve">
    <value>STORM</value>
  </data>
  <data name="UseLoadout" xml:space="preserve">
    <value>Utiliser la configuration</value>
  </data>
  <data name="Weapons" xml:space="preserve">
    <value>Armes</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Auteur</value>
  </data>
  <data name="ModVersion" xml:space="preserve">
    <value>Version du mod</value>
  </data>
  <data name="CreatedOn" xml:space="preserve">
    <value>Créé le</value>
  </data>
  <data name="ModId" xml:space="preserve">
    <value>ID du mod</value>
  </data>
  <data name="ModifiesLevel" xml:space="preserve">
    <value>Modifie le niveau</value>
  </data>
  <data name="ModVersionSupport" xml:space="preserve">
    <value>Ajouter la prise en charge de la version</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="UserNameInfo" xml:space="preserve">
    <value>Henri est déjà pris. Choisis ton propre nom.</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Nom d'utilisateur</value>
  </data>
  <data name="PathInfo" xml:space="preserve">
    <value>Ceci est le chemin. Le seul véritable chemin.</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Langue</value>
  </data>
  <data name="BuffParameter" xml:space="preserve">
    <value>Paramètre de bonus</value>
  </data>
  <data name="Abbreviation" xml:space="preserve">
    <value>Abréviation</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="Definition" xml:space="preserve">
    <value>Définition</value>
  </data>
  <data name="ThanksForNothing" xml:space="preserve">
    <value>Merci pour rien...</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="ModName" xml:space="preserve">
    <value>Nom du mod</value>
  </data>
  <data name="ModDescription" xml:space="preserve">
    <value>Description du mod</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Réinitialiser</value>
  </data>
  <data name="ModAuthor" xml:space="preserve">
    <value>Auteur du mod</value>
  </data>
</root>