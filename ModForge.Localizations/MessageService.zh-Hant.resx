<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Armors" xml:space="preserve">
    <value>護甲</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value />
  </data>
  <data name="BrowseModItems" xml:space="preserve">
    <value>瀏覽模組物品</value>
  </data>
  <data name="Buffs" xml:space="preserve">
    <value>增益效果</value>
  </data>
  <data name="Consumables" xml:space="preserve">
    <value>消耗品</value>
  </data>
  <data name="CraftingItems" xml:space="preserve">
    <value>製作材料</value>
  </data>
  <data name="CreatedMods" xml:space="preserve">
    <value>已創建模組</value>
  </data>
  <data name="CreateMod" xml:space="preserve">
    <value />
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>儀表板</value>
  </data>
  <data name="DeleteMod" xml:space="preserve">
    <value>刪除模組</value>
  </data>
  <data name="EditMod" xml:space="preserve">
    <value>編輯模組</value>
  </data>
  <data name="EntryDialogButtonText" xml:space="preserve">
    <value>帶來神聖的數據</value>
  </data>
  <data name="EntryDialogHeader" xml:space="preserve">
    <value>一位沒有鋤頭的農夫進入了</value>
  </data>
  <data name="EntryDialogLine1" xml:space="preserve">
    <value>你第一次啟動ModForge，這可能意味著你已準備好開始塑造世界——或者至少以風格破壞它。</value>
  </data>
  <data name="EntryDialogLine2" xml:space="preserve">
    <value>確實是崇高的情感。</value>
  </data>
  <data name="EntryDialogLine3" xml:space="preserve">
    <value>但且慢，高貴的工匠！在我們開始之前，有一個小問題：我們缺少神聖的遊戲數據。</value>
  </data>
  <data name="EntryDialogLine4" xml:space="preserve">
    <value>前往設定，執行儀式，匯入文件。只有這樣，熔爐才會點燃。</value>
  </data>
  <data name="EntryDialogLine5" xml:space="preserve">
    <value>沒有數據，沒有榮耀。沒有榮耀，沒有模組。</value>
  </data>
  <data name="EntryDialogLine6" xml:space="preserve">
    <value>現在踏上你的道路，證明你不僅僅是酒館裡吹噓「大計劃」的另一個醉漢。</value>
  </data>
  <data name="EntryDialogTitle" xml:space="preserve">
    <value>我感覺非常餓——想要模組。</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>匯出</value>
  </data>
  <data name="ExternalMods" xml:space="preserve">
    <value>外部模組</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>幫助</value>
  </data>
  <data name="InstallMod" xml:space="preserve">
    <value>安裝模組</value>
  </data>
  <data name="InventoryPresets" xml:space="preserve">
    <value>庫存預設</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>物品</value>
  </data>
  <data name="LanguageKey" xml:space="preserve">
    <value>中文（繁體)</value>
  </data>
  <data name="Loadouts" xml:space="preserve">
    <value>模組配置</value>
  </data>
  <data name="MiscItems" xml:space="preserve">
    <value>雜項物品</value>
  </data>
  <data name="ModdedIngots" xml:space="preserve">
    <value />
  </data>
  <data name="NewModButton" xml:space="preserve">
    <value>新模組</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>打開資料夾</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value />
  </data>
  <data name="Perks" xml:space="preserve">
    <value>特技</value>
  </data>
  <data name="ResetAll" xml:space="preserve">
    <value />
  </data>
  <data name="RPGParameter" xml:space="preserve">
    <value>RPG參數</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value />
  </data>
  <data name="Settings" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="STORM" xml:space="preserve">
    <value>STORM</value>
  </data>
  <data name="Weapons" xml:space="preserve">
    <value>武器</value>
  </data>
</root>