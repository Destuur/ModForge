<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Armors" xml:space="preserve">
    <value>Zbroje</value>
  </data>
  <data name="AvailableMods" xml:space="preserve">
    <value>Dostępne mody</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Wstecz</value>
  </data>
  <data name="BrowseModItems" xml:space="preserve">
    <value>Przeglądaj elementy moda</value>
  </data>
  <data name="Buffs" xml:space="preserve">
    <value>Wzmocnienia</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>Klasa</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Wyczyść</value>
  </data>
  <data name="ClearInfo" xml:space="preserve">
    <value>Czyści aktualnie wybrany plik</value>
  </data>
  <data name="Consumables" xml:space="preserve">
    <value>Przedmioty zużywalne</value>
  </data>
  <data name="CopyCommand" xml:space="preserve">
    <value>Kopiuj polecenie</value>
  </data>
  <data name="CopyId" xml:space="preserve">
    <value>Kopiuj ID</value>
  </data>
  <data name="CraftingItems" xml:space="preserve">
    <value>Przedmioty rzemieślnicze</value>
  </data>
  <data name="CreatedMods" xml:space="preserve">
    <value>Stworzone mody</value>
  </data>
  <data name="CreateMod" xml:space="preserve">
    <value>Utwórz mod</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Panel główny</value>
  </data>
  <data name="DeleteMod" xml:space="preserve">
    <value>Usuń mod</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Duplikuj</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edytuj</value>
  </data>
  <data name="EntryDialogButtonText" xml:space="preserve">
    <value>Przynieś mi święte dane</value>
  </data>
  <data name="EntryDialogHeader" xml:space="preserve">
    <value>Wieśniak bez widł pojawił się</value>
  </data>
  <data name="EntryDialogLine1" xml:space="preserve">
    <value>Uruchomiłeś ModForge po raz pierwszy, co zapewne oznacza, że jesteś gotów kształtować świat — albo przynajmniej efektownie go zniszczyć.</value>
  </data>
  <data name="EntryDialogLine2" xml:space="preserve">
    <value>Szlachetna to myśl, bez wątpienia.</value>
  </data>
  <data name="EntryDialogLine3" xml:space="preserve">
    <value>Lecz zaczekaj, szlachetny majsterkowiczu! Zanim zaczniemy, mamy mały problem: brakuje nam świętych danych gry.</value>
  </data>
  <data name="EntryDialogLine4" xml:space="preserve">
    <value>Udaj się do Ustawień, odpraw rytuał i zaimportuj pliki. Dopiero wtedy kuźnia zapłonie.</value>
  </data>
  <data name="EntryDialogLine5" xml:space="preserve">
    <value>Brak danych to brak chwały. Brak chwały to brak modów.</value>
  </data>
  <data name="EntryDialogLine6" xml:space="preserve">
    <value>Wyrusz więc w drogę i udowodnij, że nie jesteś kolejnym pijakiem w karczmie opowiadającym o „wielkich planach”.</value>
  </data>
  <data name="EntryDialogTitle" xml:space="preserve">
    <value>„Czuję głód… głód modów.”</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Eksportuj</value>
  </data>
  <data name="ExternalMods" xml:space="preserve">
    <value>Zewnętrzne mody</value>
  </data>
  <data name="FilePickerInfo" xml:space="preserve">
    <value>Otwiera eksplorator plików, aby wybrać mod z dysku twardego</value>
  </data>
  <data name="FileUploadInfo1" xml:space="preserve">
    <value>Przeciągnij i upuść pliki tutaj lub kliknij</value>
  </data>
  <data name="FileUploadInfo2" xml:space="preserve">
    <value>Obsługiwane formaty plików: .zip, .rar, .7z, .gzip, .tar</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Pomoc</value>
  </data>
  <data name="Implementation" xml:space="preserve">
    <value>Implementacja</value>
  </data>
  <data name="InstallMod" xml:space="preserve">
    <value>Zainstaluj mod</value>
  </data>
  <data name="InstallModInfo" xml:space="preserve">
    <value>Instaluje aktualnie wybrany mod</value>
  </data>
  <data name="InventoryPresets" xml:space="preserve">
    <value>Zestawy ekwipunku</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Przedmioty</value>
  </data>
  <data name="LanguageKey" xml:space="preserve">
    <value>Polski</value>
  </data>
  <data name="LoadoutEmptyInfo" xml:space="preserve">
    <value>Opróżnia bieżącą konfigurację zapisu</value>
  </data>
  <data name="Loadouts" xml:space="preserve">
    <value>Konfiguracje modów</value>
  </data>
  <data name="Miscellaneous" xml:space="preserve">
    <value>Różne</value>
  </data>
  <data name="MiscItems" xml:space="preserve">
    <value>Różne przedmioty</value>
  </data>
  <data name="ModdedIngots" xml:space="preserve">
    <value>Zmodowane sztaby</value>
  </data>
  <data name="ModEffects" xml:space="preserve">
    <value>Efekty modu</value>
  </data>
  <data name="NewModButton" xml:space="preserve">
    <value>Nowy mod</value>
  </data>
  <data name="NewModInputInvalid" xml:space="preserve">
    <value>Wypełnij formularz, wieśniaku!</value>
  </data>
  <data name="NewModInputValid" xml:space="preserve">
    <value>Niech modowanie się rozpocznie</value>
  </data>
  <data name="OpenFilePicker" xml:space="preserve">
    <value>Otwórz wybór pliku</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>Otwórz folder</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Przegląd</value>
  </data>
  <data name="Perks" xml:space="preserve">
    <value>Atuty</value>
  </data>
  <data name="ResetAll" xml:space="preserve">
    <value>Resetuj wszystko</value>
  </data>
  <data name="RPGParameter" xml:space="preserve">
    <value>Parametry RPG</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Zapisz</value>
  </data>
  <data name="SaveFileLoadout" xml:space="preserve">
    <value>Zapisz konfigurację pliku</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Szukaj</value>
  </data>
  <data name="SelectForMore" xml:space="preserve">
    <value>Wybierz element, aby zobaczyć więcej informacji</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
  <data name="Skill" xml:space="preserve">
    <value>Umiejętność</value>
  </data>
  <data name="StartModding" xml:space="preserve">
    <value>Rozpocznij modowanie</value>
  </data>
  <data name="STORM" xml:space="preserve">
    <value>STORM</value>
  </data>
  <data name="UseLoadout" xml:space="preserve">
    <value>Użyj konfiguracji</value>
  </data>
  <data name="Weapons" xml:space="preserve">
    <value>Bronie</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Autor</value>
  </data>
  <data name="ModVersion" xml:space="preserve">
    <value>Wersja modu</value>
  </data>
  <data name="CreatedOn" xml:space="preserve">
    <value>Utworzono</value>
  </data>
  <data name="ModId" xml:space="preserve">
    <value>ID modu</value>
  </data>
  <data name="ModifiesLevel" xml:space="preserve">
    <value>Modyfikuje poziom</value>
  </data>
  <data name="ModVersionSupport" xml:space="preserve">
    <value>Dodaj obsługę wersji</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Wersja</value>
  </data>
  <data name="UserNameInfo" xml:space="preserve">
    <value>Henryk jest zajęty. Wybierz własną.</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Nazwa użytkownika</value>
  </data>
  <data name="PathInfo" xml:space="preserve">
    <value>To jest ścieżka. Jedyna prawdziwa ścieżka.</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Język</value>
  </data>
  <data name="BuffParameter" xml:space="preserve">
    <value>Parametr buffa</value>
  </data>
  <data name="Abbreviation" xml:space="preserve">
    <value>Skrót</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nazwa</value>
  </data>
  <data name="Definition" xml:space="preserve">
    <value>Definicja</value>
  </data>
  <data name="ThanksForNothing" xml:space="preserve">
    <value>Dzięki za nic...</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Anuluj</value>
  </data>
  <data name="ModName" xml:space="preserve">
    <value>Nazwa modu</value>
  </data>
  <data name="ModDescription" xml:space="preserve">
    <value>Opis modu</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Resetuj</value>
  </data>
  <data name="ModAuthor" xml:space="preserve">
    <value>Autor moda</value>
  </data>
</root>