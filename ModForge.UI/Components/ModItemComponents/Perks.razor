@using ModForge.Shared.Models.Enums

@if (!_isLoaded)
{
	<div class="loading-screen" style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center;">
		<LoadingOverlay IsVisible="!_isLoaded" />
	</div>
}

<MudGrid Style="height: 100%; margin: 0px;" Spacing="0">

	<MudItem md="12" Style="height: 10%; width: 100%;">
		<MudStack Justify="Justify.SpaceBetween" Row Style="height: 100%; width: 100%;" AlignItems="AlignItems.Center">
			<MudText Class="header-primary pr-2" Typo="Typo.h4"><b>Perks</b></MudText>
			<MudStack Row Style="height: 100%;" AlignItems="AlignItems.Center" Spacing="2" Class="pr-2">
				<MudTextField Onkeyup="SearchPerks" Immediate @bind-Value="SearchPerk" Placeholder="Search" T="string" Variant="Variant.Outlined" Margin="Margin.Dense" Style="width: 350px; background-color: var(--mud-palette-surface);" AdornmentIcon="@Icons.Material.Filled.Search" Adornment="Adornment.Start" />

				<MudMenu Icon="@Icons.Material.Filled.FilterList" Style="color: var(--mud-palette-textprimary)">

					@foreach (var item in Enum.GetNames(typeof(SkillSelector)))
					{
						<MudMenuItem OnClick="@(() => FilterPerks(item))">@item</MudMenuItem>
					}

					<MudMenuItem OnClick="@(() => FilterPerks("Miscellaneous"))">Miscellaneous</MudMenuItem>

				</MudMenu>
				<MudImage Src="@(ModService.Mod.ModItems.Count > 0 ? "/images/Icons/forgeicon2.png" : "/images/Icons/forgeicon.png")" Height="48" Style="cursor: pointer;" onclick="@(() => ToggleDrawer())" />
			</MudStack>
		</MudStack>
	</MudItem>

	<MudItem xs="9" Style="height: 90%; padding: 0px;">
		<div style="overflow-y: auto; height: 99%;">
			<MudGrid Spacing="2" Class="pr-1">

				@if (perks is not null)
				{
					@foreach (var perk in perks)
					{
						<MudItem md="12" lg="12">
							<MudCard Class="mod-item-card" Style="border-radius: 8px;" Elevation="10" onclick="@(() => SelectModItem(perk))">
								<MudTooltip Text="@(GetDescription(perk))" Placement="Placement.Bottom" Arrow>
									<MudStack Spacing="0" Class="px-3 pt-3 pb-2">
										<MudText Class="pb-3" Typo="Typo.subtitle1" Style="font-weight: bold; line-height: 1; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100%;">@(GetName(perk))</MudText>

										<MudStack Row Justify="Justify.SpaceBetween">
											<MudText Typo="Typo.caption">Skill: @(GetSkillSelector(perk))</MudText>
											<MudText Typo="Typo.caption">@(GetLevel(perk))</MudText>
										</MudStack>
									</MudStack>
								</MudTooltip>
							</MudCard>
						</MudItem>
					}
				}

			</MudGrid>
		</div>
	</MudItem>

	<MudItem xs="3" Style="height: 90%; padding: 0px;" Class="px-2">
		<MudCard Class="dialog-card pa-3" Style="border-radius: 8px; height: 99%;" Elevation="10">
			@if (SelectedModItem is null)
			{
				<MudStack Style="height: 100%;" Justify="Justify.Center">
					<MudText Typo="Typo.h6" Align="Align.Center">Select element for more details</MudText>
				</MudStack>
			}
			else
			{
				<MudStack Row AlignItems="AlignItems.End" Justify="Justify.SpaceBetween">
					<MudImage Src="@IconService.GetIcon(SelectedModItem)" />
					<MudMenu Icon="@Icons.Material.Filled.MoreVert" Variant="Variant.Text" Class="pa-0">
						<MudMenuItem Label="Edit" OnClick="@(() => NavigateToPerk(SelectedModItem))" />
						<MudMenuItem Label="Duplicate" OnClick="@(() => DuplicatePerk(SelectedModItem))" />
						<MudMenuItem Label="Copy Id" OnClick="@(() => CopyTextToClipboard(SelectedModItem.Id))" />
						<MudMenuItem Label="Copy Console Command" OnClick="@(() => CopyTextToClipboard($"#player.soul:AddPerk(‘{SelectedModItem.Id}‘)"))" />
					</MudMenu>
				</MudStack>
				<MudText Class="pb-2" Typo="Typo.subtitle1" Color="Color.Primary"><b>@(GetName(SelectedModItem))</b></MudText>
				<div style="height: 100%; width: 100%; overflow: auto;">
					<MudStack>
						@foreach (var attribute in SelectedModItem.Attributes)
						{
							<MudStack Spacing="0" Justify="Justify.SpaceBetween">
								<MudText Typo="Typo.subtitle2">@(attribute.Name):</MudText>
								<MudText Typo="Typo.caption">@(attribute.Value)</MudText>
							</MudStack>
						}
					</MudStack>
				</div>

			}
		</MudCard>
	</MudItem>

</MudGrid>
