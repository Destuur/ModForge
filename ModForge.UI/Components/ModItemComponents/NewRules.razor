@page "/moditems/stormrules/{ModId}"
@page "/moditems/stormrules"

@if (!isLoaded)
{
	<div class="loading-screen" style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center;">
		<LoadingOverlay IsVisible="!isLoaded" />
	</div>
}
<MudGrid Style="height: 100vh; margin: 0px;" Spacing="0" Class="pl-2">
	<MudItem md="12" Style="height: 10%; width: 100%;">
		<MudStack Justify="Justify.SpaceBetween" Row Style="height: 100%; width: 100%;" AlignItems="AlignItems.Center">
			<MudText Class="header-primary pr-2" Typo="Typo.h4"><b>Rules</b></MudText>
			@if (string.IsNullOrEmpty(ModService.Mod.Id) == false)
			{
				<MudImage Class="pr-4" Src="@(ModService.Mod.ModItems.Count > 0 ? "/images/Icons/forgeicon2.png" : ModService.Mod.StormRules.Count > 0 ? "/images/Icons/forgeicon2.png" : "/images/Icons/forgeicon.png")" Height="48" Style="cursor: pointer;" onclick="@(() => ToggleDrawer())" />
			}
		</MudStack>
	</MudItem>
	<MudItem md="9" Style="height: 90%; padding: 0px;">
		<div style="overflow-y: auto; height: 99%;">
			<MudGrid Spacing="2">
				@foreach (var rule in ModService.Mod.StormRules)
				{
					<MudItem md="12" lg="12">
						<MudCard Class="@($"mod-item-card")" Style="@($"border-radius: 8px; {(SelectedRule?.Name == rule.Name ? "border-color: #df6f00; border-width: 3px;" : "")}")" Elevation="10" onclick="@(() => SelectRule(rule))">
							<MudTooltip Text="Description Placeholder" Placement="Placement.Bottom" Arrow>
								<MudStack Row Spacing="0" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
									<MudStack Spacing="0" Class="px-3 pt-3 pb-2">
										<MudText Class="pb-3" Typo="Typo.subtitle1" Style="font-weight: bold; line-height: 1; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100%;">@rule.Name</MudText>
										<MudStack Row Justify="Justify.SpaceBetween">
											<MudText Typo="Typo.caption">@((string.IsNullOrEmpty(rule.Comment) ? "No Comment" : rule.Comment))</MudText>
										</MudStack>
									</MudStack>
									<MudStack Row Class="pr-2" Style="height: fit-content">
										<MudIconButton OnClick="@(() => EditRule(rule))" Icon="@Icons.Material.Filled.Edit" Style="color: var(--icon-primary)" />
										<MudIconButton OnClick="@(() => DeleteRule(rule))" Icon="@Icons.Material.Filled.Delete" Color="Color.Error"  />
									</MudStack>
								</MudStack>
							</MudTooltip>
						</MudCard>
					</MudItem>
				}
				@if (ModService.Mod.StormRules.Count == 0)
				{

					<MudItem md="12" lg="12">
						<MudTooltip RootStyle="width: 100%;" Text="Add New Rule">
							<MudCard Class="mod-item-card pa-3" Style="border-radius: 8px; height: 99%;" Elevation="10" @onclick="_ => CreateNewRule()">
								<MudStack Row Justify="Justify.Center">
									<MudText Typo="Typo.subtitle1" Style="font-weight: bold; line-height: 1; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100%;">Currently no rules</MudText>
								</MudStack>
							</MudCard>
						</MudTooltip>
					</MudItem>
				}
				else
				{
					<MudItem md="12" lg="12">
						<MudTooltip RootStyle="width: 100%;" Text="Add New Rule">
							<MudButton FullWidth Variant="Variant.Outlined" Color="Color.Primary" OnClick="_ => CreateNewRule()">
								<MudIcon Icon="@Icons.Material.Filled.Add" Color="Color.Primary" />
							</MudButton>
						</MudTooltip>
					</MudItem>
				}
			</MudGrid>
		</div>
	</MudItem>
	<MudItem xs="3" Style="height: 90%; padding: 0px;" Class="px-2">
		<MudCard Class="dialog-card pa-3" Style="border-radius: 8px; height: 99%;" Elevation="10">
			@* @if (SelectedRule is not null)
			{
				<pre><code>
				<MudText Color="Color.Info" Typo="Typo.body2">@($"<storm>")</MudText>
				<MudText Color="Color.Info" Typo="Typo.body2">@($"	<rules>")</MudText>
				<MudText Color="Color.Info" Typo="Typo.body2">@($"		<rule name=\"{SelectedRule.Name}\">")</MudText>
							</code></pre>
				foreach (var selector in SelectedRule.Selectors)
				{
					<SelectorComponent Selector="selector" />
				}
				foreach (var operation in SelectedRule.Operations)
				{
					<OperationComponent Operation="operation" />
				}
			}
			<MudText Color="Color.Info" Typo="Typo.body2">@($"		</rule>")</MudText>
			<MudText Color="Color.Info" Typo="Typo.body2">@($"	</rules>")</MudText>
			<MudText Color="Color.Info" Typo="Typo.body2">@($"</storm>")</MudText>*@

			<MudStack Style="height: 100%;" AlignItems="AlignItems.Center" Justify="Justify.Center">
				<MudText>More infos soon</MudText>
			</MudStack>

		</MudCard>
	</MudItem>
</MudGrid>

<ModItemsDrawer IsOpen="isOpen" />