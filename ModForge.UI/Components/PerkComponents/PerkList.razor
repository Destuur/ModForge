@using ModForge.Shared.Models.Abstractions
@using ModForge.Shared.Models.ModItems
@if (PerkItems is not null)
{

	
	<MudGrid class="px-4 pt-3" Spacing="4" Justify="Justify.FlexStart">

		<MudItem xs="12" sm="12" md="12" lg="12">
			<MudStack class="px-2 mr-4" Row="true">
				<MudTextField Class="mudtext-warm" @bind-Value="SearchPerk" Immediate="true" Label="Search" OnKeyUp="SearchPerks" Variant="Variant.Outlined" Margin="Margin.Dense" AdornmentIcon="@Icons.Material.Outlined.Search"></MudTextField>
				@* <MudSelect>
					<MudSelectItem ></MudSelectItem>
				</MudSelect> *@

				<MudSpacer />

				<MudBadge Content="@ModService.Mod.ModItems.Count" Overlap="true" Color="Color.Primary" Visible="@(ModService.Mod.ModItems.Count > 0)">
					<MudImage Src="@GetForgeIcon()" onclick="@ToggleDrawer" Height="55" Style="cursor: pointer" />
				</MudBadge>

			</MudStack>
		</MudItem>

		<MudItem xs="12" sm="12" md="12" lg="12">
			<MudPaper Class="d-flex flex-column overflow-x-auto px-2 ma-0" Height="calc(100vh - 220px)" Elevation="0" Outlined="false" Style="background-color: transparent">
				<MudGrid>
					@foreach (var perkItem in PerkItems)
					{
						@if (perkItem is not Perk perk)
						{
							continue;
						}
						@* @if (perk.Localizations.Count == 0)
				{
					continue;
				} *@
						<PerkListItem Perk="perk"></PerkListItem>
					}
				</MudGrid>
			</MudPaper>
		</MudItem>

	
	</MudGrid>

	<MudDrawer class="my-rounded-menu" OpenChanged="ToggleDrawer" Open="isOpen" Anchor="Anchor.End" Overlay="true" ClipMode="DrawerClipMode.Always" Variant="DrawerVariant.Temporary">

		<MudDrawerHeader>
			<MudText Align="Align.Right" Typo="Typo.h6">Modded Ingots</MudText>
		</MudDrawerHeader>

		<MudList T="IAttribute">
			@foreach (var modItem in ModService.Mod.ModItems)
			{

				<MudListItem Gutters="true" Disabled="true">
					<MudPaper Class="attribute-card" Outlined="true" Elevation="0" Height="4rem">


						@* @if (modItem.Localization == null ||
										(modItem.Localization.Names == null ||
										modItem.Localization.Names.Count == 0))
						{
							<div style="display:flex; justify-content:center;">
								<MudText Align="Align.Center" Typo="Typo.caption">System Perk</MudText>
							</div>
							<div style="display:flex; justify-content:center;">
								<MudText Align="Align.Center" Style="font-weight: bold; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 20rem;" Typo="Typo.subtitle1">@modItem.Attributes.FirstOrDefault(x => x.Name.Contains("name")).Value</MudText>
							</div>
						}
						else
						{
							<div style="display:flex; justify-content:center;">
								<MudText Align="Align.Center" Typo="Typo.caption">Perk</MudText>
							</div>
							<div style="display:flex; justify-content:center;">
								<MudText Align="Align.Center" Style="font-weight: bold; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 20rem;" Typo="Typo.subtitle1">@(modItem.Localization.GetName(languageKey) ?? "No Name")</MudText>
							</div>
						} *@
					</MudPaper>
				</MudListItem>

			}
		</MudList>

	</MudDrawer>
}

